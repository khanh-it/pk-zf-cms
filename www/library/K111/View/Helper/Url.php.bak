<?php
/**
* @category   ZF
* @package    ZF_View
* @subpackage Helper
* @copyright  Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)
* @version    $Id: Url.php 23775 2011-03-01 17:25:24Z ralph $
* @license    http://framework.zend.com/license/new-bsd     New BSD License
*/

/**
 * Zend_View_Helper_Abstract.php
 */
require_once 'Zend/View/Helper/Abstract.php';

/**
 * Helper for making easy links and getting urls that depend on the routes and router
 *
 * @uses Zend_View_Helper_Abstract
 * @package ZF_View
 * @subpackage Helper
 * @copyright Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)
 * @license http://framework.zend.com/license/new-bsd New BSD License
 */
class ZF_View_Helper_Url extends Zend_View_Helper_Url {
	public function url(array $urlOptions = array(), $name = null, $reset = false, $queryString = false, $encode = true) {
	    
	    // Default locale for translate uri
	    /* if ( 'frontend' == APPLICATION_SITE && !isset($urlOptions['@locale']) )
	        $urlOptions['@locale'] = APPLICATION_LANGUAGE; */
	    
		/** Tao extension cho duong dan */
		// Extension cua duong dan
		$extension = '';
		// Kiem tra co dang ky tao extension khong?
		if (Zend_Registry::isRegistered(EXTENSION_URL)) {
			if(Zend_Registry::get(EXTENSION_URL) !== false) {
				$extension = Zend_Registry::get(EXTENSION_URL);
				
				// Bien co xac dinh 
				$isExtension = false;
				if(isset($urlOptions["extension"]) && !empty($urlOptions["extension"])) {
					$isExtension = $urlOptions ["extension"];
					unset ( $urlOptions ["extension"] );
				}
				// Xoa bo extension
				if ($isExtension == true) {
					$extension = '';
				}
			}
		}
		
		/** Kiem tra phan quyen */
		if(Zend_Registry::isRegistered(CHECK_PERMISSION) && Zend_Registry::get(CHECK_PERMISSION)) {
			$front = Zend_Controller_Front::getInstance();
			$request = $front->getRequest();
			$isSkipCheck = $request->getParam('skipCheckPermision');
			
			// TH co reset tham so
			if($reset) {
				// Lay module, controller, aciton default
				$pluginResource = $front->getParam('bootstrap')->getPluginResources();
				$optionsFrontController = $pluginResource['frontcontroller']->getOptions();
					
				// TH co truyen module thi lay module, nguoc lai: TH co cau hinh module mac dinh thi lay module mac dinh, con lai lay module 'default'
				$module = $urlOptions['module'] ? $urlOptions['module'] : ($optionsFrontController['defaultModule'] ? $optionsFrontController['defaultModule'] : 'default');
				$controller = $urlOptions['controller'] ? $urlOptions['controller'] : ($optionsFrontController['defaultControllerName'] ? $optionsFrontController['defaultControllerName'] : 'index');
				$action = $urlOptions['action'] ? $urlOptions['action'] : ($optionsFrontController['defaultAction'] ? $optionsFrontController['defaultAction'] : 'index');
			}
			// TH khong reset tham so
			else {
				$module = $urlOptions['module'] ? $urlOptions['module'] : $request->getModuleName();
				$controller = $urlOptions['controller'] ? $urlOptions['controller'] : $request->getControllerName();
				$action = $urlOptions['action'] ? $urlOptions['action'] : $request->getActionName();
			}
			$isPermission = ZF_CheckPermission::checkUrl(APPLICATION_SITE, $module, $controller, $action, $isSkipCheck);
			
			if( !$isPermission ) {
				return '#';
			}
			
			unset($front, $request);
		}
		unset($urlOptions['skipCheckPermision']);
		
		// -- Current query string
		$queryString = $queryString ? "?" . $_SERVER ["QUERY_STRING"] : "";
		
		if ( true === $urlOptions['useOldQuery'] ){
		    $front = Zend_Controller_Front::getInstance();
		    $request = $front->getRequest();
		    
		    // TH co truyen module thi lay module, nguoc lai: TH co cau hinh module mac dinh thi lay module mac dinh, con lai lay module 'default'
		    $module = $urlOptions['module'] ? $urlOptions['module'] : $request->getModuleName();
		    $controller = $urlOptions['controller'] ? $urlOptions['controller'] : $request->getControllerName();
		    
		    $queryParams = $this->view->iController->getIndexQueryParams(array(
		        $module, $controller, 'index'
		    ), false);
		     
		    if ( count($queryParams) > 0 ){
		        if ( $queryString == '' ) $queryString = '?';
		        $queryString .= http_build_query($queryParams);
		    }
		    
		    unset($front, $request);
		}unset($urlOptions['useOldQuery']);
		
		$url = parent::url ( $urlOptions, $name, $reset, $encode );
		
		// Return
		return $url . $extension . $queryString;
	}
}
?>